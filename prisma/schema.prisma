generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  sessions      Session[]
  maps          Map[]
  likes         Like[]
  comments      Comment[]
}

model Map {
  id             String   @id @default(cuid())
  name           String   @db.VarChar(255)
  mapData        Json?
  animationSpeed Decimal? @db.Decimal(5,4)
  size           Int?
  start          Int?
  target         Int?
  algorithm      String?  @db.VarChar(255)
  author         User     @relation(fields: [authorId], references: [id])
  likes          Like[]
  comments       Comment[]
  authorId       String
  authorUserName String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Like {
  id        String @id @default(cuid())
  map       Map    @relation(fields: [mapId], references: [id])
  mapId     String
  author    User   @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
}

model Comment {
  id         String @id @default(cuid())
  content    String
  authorName String?
  map        Map    @relation(fields: [mapId], references: [id])
  mapId      String
  author     User   @relation(fields: [authorId], references: [id])
  authorId   String
  createdAt  DateTime @default(now())
}
